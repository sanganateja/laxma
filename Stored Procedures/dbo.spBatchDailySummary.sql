SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE   PROCEDURE [dbo].[spBatchDailySummary]
    @cv_1 VARCHAR(2000) OUTPUT,
    @MaturityDateStart DATE,
    @MaturityDateEnd DATE,
    @Status NVARCHAR(2000),
    @AccountId NUMERIC
AS
BEGIN
    SET NOCOUNT ON
    SET @cv_1 = NULL
    SET @MaturityDateEnd = DATEADD(day,1,@MaturityDateEnd);

    IF @Status = 'Open'
    BEGIN
        SELECT CONVERT(DATE, f.MATURITY_TIME) AS BatchDate, SUM(f.AMOUNT_MINOR_UNITS) AS Balance
        FROM dbo.ACC_TRANSFERS f
        WHERE f.ACCOUNT_ID = @AccountId
          AND f.MATURITY_TIME IS NOT NULL
          AND f.MATURITY_TRANSACTION_ID IS NULL
          AND f.MATURITY_TIME >= @MaturityDateStart
          AND f.MATURITY_TIME < @MaturityDateEnd
        GROUP BY CONVERT(DATE, f.MATURITY_TIME)
        ORDER BY CONVERT(DATE, f.MATURITY_TIME);
    END;

    IF @Status = 'Closed'
    BEGIN
        SELECT CONVERT(DATE, t.TRANSACTION_TIME) AS BatchDate, SUM(f.AMOUNT_MINOR_UNITS) AS Balance
        FROM dbo.ACC_TRANSFERS f JOIN dbo.ACC_TRANSACTIONS t ON f.MATURITY_TRANSACTION_ID = t.TRANSACTION_ID
        WHERE f.ACCOUNT_ID = @AccountId
          AND f.MATURITY_TRANSACTION_ID IS NOT NULL
          AND t.TRANSACTION_TIME >= @MaturityDateStart
          AND t.TRANSACTION_TIME < @MaturityDateEnd
        GROUP BY CONVERT(DATE, t.TRANSACTION_TIME)
        ORDER BY CONVERT(DATE, t.TRANSACTION_TIME);
    END;

    IF @Status IS NULL
    BEGIN
        SELECT CONVERT(DATE, ISNULL(t.TRANSACTION_TIME, f.MATURITY_TIME)) AS BatchDate, SUM(f.AMOUNT_MINOR_UNITS) AS Balance
        FROM dbo.ACC_TRANSFERS f LEFT OUTER JOIN dbo.ACC_TRANSACTIONS t ON f.MATURITY_TRANSACTION_ID = t.TRANSACTION_ID
        WHERE f.ACCOUNT_ID = @AccountId
          AND f.MATURITY_TIME IS NOT NULL
          AND ISNULL(t.TRANSACTION_TIME, f.MATURITY_TIME) >= @MaturityDateStart
          AND ISNULL(t.TRANSACTION_TIME, f.MATURITY_TIME) < @MaturityDateEnd
       GROUP BY CONVERT(DATE, ISNULL(t.TRANSACTION_TIME, f.MATURITY_TIME))
       ORDER BY CONVERT(DATE, ISNULL(t.TRANSACTION_TIME, f.MATURITY_TIME));
    END;
END;
GO
